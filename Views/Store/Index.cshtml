@using WebApp2021.Models;
@using WebApp2021.Utilities;
@using WebApp2021.Controllers;
@using Newtonsoft.Json;

@model IEnumerable<Store>

    @{
    ViewBag.Title = "Store";
    }

    <style>

        input[type=text] {
            color: black;
        }

        select {
            margin-bottom: 10px;
            margin-top: 5px;
        }

        .data-row:hover {
            transition: background-color 0.5s;
            background-color: lightgray;
            cursor: pointer;
        }

        .thead-dark {
            color: #fff;
            background-color: #343a40;
            border-color: #454d55;
        }
    </style>

    @section scripts
    {

    <script src='https://www.bing.com/api/maps/mapcontrol?callback=GetMap&key=AjT4rQugWxVeKVPuHJLOgCK0QUqhra_qFFvSm_bHSUF3bGnQo3xu-8750mFciMKY' async defer></script>

    <script>
        $(document).ready(() => {
            $('#search').click(() => {
                var url = new URL(window.location.href.split("?")[0]);

                const name = $('#name').val() || null;
                if (name) url.searchParams.set('name', name);

                const city = $('#city').val() || null;
                if (city) url.searchParams.set('city', city);

                for (const x of $(".tags")) {
                    if (x.checked) url.searchParams.append('tags', Number(x.value));
                }

                window.location.href = url.href;
            });
        });

    </script>

    <script>
        function GetMap() {
            $(document).ready(async () => {
                const map = new Microsoft.Maps.Map('#myMap');
                const stores = @Html.Raw(JsonConvert.SerializeObject(Model.ToArray()));
                const promises = [];
                const center = [0, 0];
                const key = 'AjT4rQugWxVeKVPuHJLOgCK0QUqhra_qFFvSm_bHSUF3bGnQo3xu-8750mFciMKY';
                for (const i in stores) {
                    const url = `https://dev.virtualearth.net/REST/v1/Locations?key=${key}&q=${stores[i].Location}`;
                    promises.push(new Promise(async (resolve, reject) => {
                        $.getJSON(url).done((data) => {
                            if (data &&
                                data.resourceSets &&
                                data.resourceSets[0] &&
                                data.resourceSets[0].resources &&
                                data.resourceSets[0].resources[0]) {
                                stores[i].point = data.resourceSets[0].resources[0].point.coordinates;
                                map.entities.push(new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(...stores[i].point), {
                                    title: stores[i].Name,
                                    text: (Number(i) + 1).toString(),
                                    enableHoverStyle: true,
                                }));
                                center[0] += stores[i].point[0];
                                center[1] += stores[i].point[1];
                            }
                            resolve();
                        }).fail((jqxhr, textStatus, err) => {
                            if (err) {
                                console.error(err);
                                reject(err);
                            }
                        });
                    }));
                }
                await Promise.all(promises);
                center[0] = center[0] / stores.filter(s => s.point).length;
                center[1] = center[1] / stores.filter(s => s.point).length;
                map.setView({
                    center: new Microsoft.Maps.Location(...center)
                });
            });
        }
    </script>

    }

    <div class="row" style="margin-top: 12px;margin-bottom:8px;">
        <div class="col-md-2"><h3 style="margin:0px;">filters:</h3></div>

        <div class="col-md-2">
            <input placeholder="Name:" type="text" id="name" />
        </div>
        <div class="col-md-2">
            <input placeholder="City:" type="text" id="city" />
        </div>
        <div class="col-md-2" style="margin-top: 8px;">
            <div class="dropdown">
                <a href="#" data-toggle="dropdown" class="dropdown-toggle wrapper-dropdown">Tags<b class="caret"></b></a>
                <ul class="dropdown-menu" style="background-color:#1d1b1b;overflow-y:scroll;height:10em;">
                    @{
                    foreach (var tag in ViewData["Tags"] as List
                    <Tag>
                        )
                        {
                        <li class="tag-list">
                            <span class="checkbox">
                                <label>
                                    <input class="tags" type="checkbox" name="tags" value="@tag.Id">
                                    @tag.Type
                                </label>
                            </span>
                        </li>
                        }
                        }
                </ul>
            </div>
        </div>
        <div class="col-md-2">
            <button id="search" class="btn btn-success">Search</button>
        </div>

        @{
        if (UserController.IsManager(Context.Session))
        {
        <div class="col-md-2">
            <div style="float: right">
                @Html.ActionLink("Add Store", "Create", "Store", null, new { @class = "btn btn-primary" })
            </div>
        </div>
        }
        }
    </div>
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Location)

                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Tags)
                    </th>
                    @{
                    if (UserController.IsManager(Context.Session))
                    {
                    <th></th>
                    <th></th>
                    }
                    }
                </tr>
            </thead>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(model => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(model => item.Location)
                </td>
                <td>
                    @{
                    var stringTags = string.Join(", ", item.Tags.Select(t => t.Tag.Type));
                    }
                    @Html.DisplayFor(model => stringTags)
                </td>
                @{
                if (UserController.IsManager(Context.Session))
                {
                <td>
                    <a class="btn btn-success" href="/Store/Edit?id=@item.Id">Edit</a>
                </td>
                <td>
                    <partial name="_Delete" model="item">
                </td>
                }
                }

            </tr>
            }
        </table>
    </div>
    <div class="row">
        <div id="myMap" class="col-md-10 col-md-offset-1" style='position:relative;height:400px;'></div>
    </div>
