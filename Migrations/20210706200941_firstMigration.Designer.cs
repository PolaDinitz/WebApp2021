// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp2021.DAL;

namespace WebApp2021.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210706200941_firstMigration")]
    partial class firstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApp2021.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Carbs")
                        .HasColumnType("int");

                    b.Property<int>("Fat")
                        .HasColumnType("int");

                    b.Property<int>("KosherType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Protein")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ingredient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Carbs = 5,
                            Fat = 4,
                            KosherType = 3,
                            Name = "Egg",
                            Protein = 7
                        },
                        new
                        {
                            Id = 2,
                            Carbs = 26,
                            Fat = 10,
                            KosherType = 3,
                            Name = "Potato",
                            Protein = 5
                        },
                        new
                        {
                            Id = 3,
                            Carbs = 5,
                            Fat = 1,
                            KosherType = 3,
                            Name = "Tomato",
                            Protein = 3
                        },
                        new
                        {
                            Id = 4,
                            Carbs = 6,
                            Fat = 5,
                            KosherType = 1,
                            Name = "Chicken",
                            Protein = 12
                        },
                        new
                        {
                            Id = 5,
                            Carbs = 10,
                            Fat = 6,
                            KosherType = 3,
                            Name = "Onion",
                            Protein = 4
                        },
                        new
                        {
                            Id = 6,
                            Carbs = 20,
                            Fat = 30,
                            KosherType = 3,
                            Name = "Mayo",
                            Protein = 10
                        },
                        new
                        {
                            Id = 7,
                            Carbs = 4,
                            Fat = 20,
                            KosherType = 1,
                            Name = "Beef",
                            Protein = 25
                        },
                        new
                        {
                            Id = 8,
                            Carbs = 2,
                            Fat = 1,
                            KosherType = 2,
                            Name = "Milk",
                            Protein = 3
                        },
                        new
                        {
                            Id = 9,
                            Carbs = 40,
                            Fat = 2,
                            KosherType = 3,
                            Name = "Bread",
                            Protein = 1
                        },
                        new
                        {
                            Id = 10,
                            Carbs = 1,
                            Fat = 1,
                            KosherType = 3,
                            Name = "Cucumber",
                            Protein = 1
                        },
                        new
                        {
                            Id = 11,
                            Carbs = 4,
                            Fat = 20,
                            KosherType = 0,
                            Name = "Pork",
                            Protein = 25
                        },
                        new
                        {
                            Id = 12,
                            Carbs = 4,
                            Fat = 20,
                            KosherType = 2,
                            Name = "Parmesan",
                            Protein = 12
                        },
                        new
                        {
                            Id = 13,
                            Carbs = 20,
                            Fat = 5,
                            KosherType = 3,
                            Name = "Croutons",
                            Protein = 1
                        });
                });

            modelBuilder.Entity("WebApp2021.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrepTime")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VideoID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Recipe");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageURL = "https://st3.depositphotos.com/2208212/19398/i/450/depositphotos_193980236-stock-photo-tortilla-de-patatas-spanish-omelette.jpg",
                            Instructions = "Break an egg and fry it",
                            Name = "Omlette",
                            PrepTime = 5,
                            UserId = 2,
                            VideoID = "r09Hgeb9-6s"
                        },
                        new
                        {
                            Id = 2,
                            ImageURL = "https://www.everydaymaven.com/wp-content/uploads/2019/04/Arugula-Salad-1.jpg",
                            Instructions = "Dice the veggies in a bowl",
                            Name = "Salad",
                            PrepTime = 10,
                            UserId = 1,
                            VideoID = "XCmLLzoK3HI"
                        },
                        new
                        {
                            Id = 3,
                            ImageURL = "http://www.thehungrymouse.com/wp-content/uploads/2008/11/dsc07431.jpg",
                            Instructions = "Break an egg and fry it with bacon",
                            Name = "Omlette with bacon",
                            PrepTime = 15,
                            UserId = 2,
                            VideoID = "7EKpd06AQgk"
                        },
                        new
                        {
                            Id = 4,
                            ImageURL = "https://media4.s-nbcnews.com/j/newscms/2019_20/1437505/chinatown_chicken_salad_7db57f6a1845004c274840d39ce2b31c.today-inline-large.jpg",
                            Instructions = "Chop cooked and cooled chicken and place into a large bowl with celery and onions. Mix dressing ingredients (per recipe below) in a bowl. Toss with chicken. Serve on rolls, bread or over a bead of lettuce.",
                            Name = "Chicken Salad",
                            PrepTime = 35,
                            UserId = 3,
                            VideoID = "kUkEBbCOlJU"
                        },
                        new
                        {
                            Id = 5,
                            ImageURL = "https://www.fifteenspatulas.com/wp-content/uploads/2011/10/Caesar-Salad-Fifteen-Spatulas-3.jpg",
                            Instructions = "Dice the veggies in a bowl, Break some Croutons, add grated Parmesan and olive oil. And now U can eat. its very tasty",
                            Name = "Caesar Salad",
                            PrepTime = 30,
                            UserId = 6,
                            VideoID = "ZwAfROUJIPE"
                        },
                        new
                        {
                            Id = 6,
                            ImageURL = "https://static01.nyt.com/images/2016/06/23/dining/23COOKING-SOY-GRILLED-STEAK1/23COOKING-SOY-GRILLED-STEAK1-articleLarge.jpg",
                            Instructions = "Take a meat and bbq it",
                            Name = "BBQ Steak",
                            PrepTime = 20,
                            UserId = 5,
                            VideoID = "nsw0Px-Pho8"
                        });
                });

            modelBuilder.Entity("WebApp2021.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("RecipeIngredient");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 1
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 8
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 3
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 5
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 6
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 10
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 1
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 8
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 11
                        },
                        new
                        {
                            RecipeId = 4,
                            IngredientId = 3
                        },
                        new
                        {
                            RecipeId = 4,
                            IngredientId = 4
                        },
                        new
                        {
                            RecipeId = 4,
                            IngredientId = 5
                        },
                        new
                        {
                            RecipeId = 4,
                            IngredientId = 6
                        },
                        new
                        {
                            RecipeId = 4,
                            IngredientId = 10
                        },
                        new
                        {
                            RecipeId = 5,
                            IngredientId = 3
                        },
                        new
                        {
                            RecipeId = 5,
                            IngredientId = 5
                        },
                        new
                        {
                            RecipeId = 5,
                            IngredientId = 6
                        },
                        new
                        {
                            RecipeId = 5,
                            IngredientId = 10
                        },
                        new
                        {
                            RecipeId = 5,
                            IngredientId = 12
                        },
                        new
                        {
                            RecipeId = 5,
                            IngredientId = 13
                        },
                        new
                        {
                            RecipeId = 6,
                            IngredientId = 5
                        },
                        new
                        {
                            RecipeId = 6,
                            IngredientId = 7
                        });
                });

            modelBuilder.Entity("WebApp2021.Models.RecipeUserEvent", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("bit");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("RecipeId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("RecipeUserEvent");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            UserId = 1,
                            IsFavorite = true,
                            Views = 1
                        },
                        new
                        {
                            RecipeId = 1,
                            UserId = 2,
                            IsFavorite = true,
                            Views = 3
                        },
                        new
                        {
                            RecipeId = 1,
                            UserId = 3,
                            IsFavorite = true,
                            Views = 0
                        },
                        new
                        {
                            RecipeId = 1,
                            UserId = 4,
                            IsFavorite = true,
                            Views = 1
                        },
                        new
                        {
                            RecipeId = 1,
                            UserId = 5,
                            IsFavorite = true,
                            Views = 0
                        },
                        new
                        {
                            RecipeId = 2,
                            UserId = 1,
                            IsFavorite = true,
                            Views = 0
                        },
                        new
                        {
                            RecipeId = 2,
                            UserId = 2,
                            IsFavorite = true,
                            Views = 3
                        },
                        new
                        {
                            RecipeId = 2,
                            UserId = 3,
                            IsFavorite = false,
                            Views = 3
                        },
                        new
                        {
                            RecipeId = 2,
                            UserId = 4,
                            IsFavorite = false,
                            Views = 0
                        },
                        new
                        {
                            RecipeId = 2,
                            UserId = 5,
                            IsFavorite = false,
                            Views = 3
                        },
                        new
                        {
                            RecipeId = 3,
                            UserId = 1,
                            IsFavorite = true,
                            Views = 0
                        },
                        new
                        {
                            RecipeId = 3,
                            UserId = 2,
                            IsFavorite = false,
                            Views = 3
                        },
                        new
                        {
                            RecipeId = 3,
                            UserId = 3,
                            IsFavorite = true,
                            Views = 3
                        },
                        new
                        {
                            RecipeId = 3,
                            UserId = 4,
                            IsFavorite = true,
                            Views = 3
                        },
                        new
                        {
                            RecipeId = 3,
                            UserId = 5,
                            IsFavorite = false,
                            Views = 1
                        },
                        new
                        {
                            RecipeId = 4,
                            UserId = 1,
                            IsFavorite = true,
                            Views = 2
                        },
                        new
                        {
                            RecipeId = 4,
                            UserId = 2,
                            IsFavorite = true,
                            Views = 0
                        },
                        new
                        {
                            RecipeId = 4,
                            UserId = 3,
                            IsFavorite = true,
                            Views = 2
                        },
                        new
                        {
                            RecipeId = 4,
                            UserId = 4,
                            IsFavorite = true,
                            Views = 1
                        },
                        new
                        {
                            RecipeId = 4,
                            UserId = 5,
                            IsFavorite = true,
                            Views = 3
                        },
                        new
                        {
                            RecipeId = 5,
                            UserId = 1,
                            IsFavorite = false,
                            Views = 2
                        },
                        new
                        {
                            RecipeId = 5,
                            UserId = 2,
                            IsFavorite = true,
                            Views = 1
                        },
                        new
                        {
                            RecipeId = 5,
                            UserId = 3,
                            IsFavorite = true,
                            Views = 2
                        },
                        new
                        {
                            RecipeId = 5,
                            UserId = 4,
                            IsFavorite = true,
                            Views = 0
                        },
                        new
                        {
                            RecipeId = 5,
                            UserId = 5,
                            IsFavorite = false,
                            Views = 1
                        },
                        new
                        {
                            RecipeId = 6,
                            UserId = 1,
                            IsFavorite = true,
                            Views = 1
                        },
                        new
                        {
                            RecipeId = 6,
                            UserId = 2,
                            IsFavorite = true,
                            Views = 1
                        },
                        new
                        {
                            RecipeId = 6,
                            UserId = 3,
                            IsFavorite = true,
                            Views = 2
                        },
                        new
                        {
                            RecipeId = 6,
                            UserId = 4,
                            IsFavorite = true,
                            Views = 3
                        },
                        new
                        {
                            RecipeId = 6,
                            UserId = 5,
                            IsFavorite = false,
                            Views = 2
                        });
                });

            modelBuilder.Entity("WebApp2021.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Store");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Petah Tikva",
                            Name = "Hazi Hinnam",
                            Street = "Rishon LeTsiyon 1"
                        },
                        new
                        {
                            Id = 2,
                            City = "Kefar Sava",
                            Name = "Mega Sport",
                            Street = "Weizmann 301"
                        },
                        new
                        {
                            Id = 3,
                            City = "Herzliya",
                            Name = "Tiv Taam",
                            Street = "Ben Gurion Blvd 56"
                        },
                        new
                        {
                            Id = 4,
                            City = "Raanana",
                            Name = "Mega",
                            Street = "Ahuza Street 69"
                        });
                });

            modelBuilder.Entity("WebApp2021.Models.StoreTag", b =>
                {
                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("StoreId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("StoreTag");

                    b.HasData(
                        new
                        {
                            StoreId = 1,
                            TagId = 1
                        },
                        new
                        {
                            StoreId = 1,
                            TagId = 3
                        },
                        new
                        {
                            StoreId = 2,
                            TagId = 2
                        },
                        new
                        {
                            StoreId = 3,
                            TagId = 2
                        },
                        new
                        {
                            StoreId = 3,
                            TagId = 3
                        },
                        new
                        {
                            StoreId = 4,
                            TagId = 3
                        });
                });

            modelBuilder.Entity("WebApp2021.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tag");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Food"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Sports"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Utensils"
                        });
                });

            modelBuilder.Entity("WebApp2021.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsManager")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "system@foodies.com",
                            FirstName = "system",
                            IsManager = true,
                            LastName = "administrator",
                            Password = "admin123",
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "DanielBeilin@gmail.com",
                            FirstName = "Daniel",
                            IsManager = false,
                            LastName = "Beilin",
                            Password = "danielb123",
                            UserName = "DanielBeilin"
                        },
                        new
                        {
                            Id = 3,
                            Email = "PolaDinitz@gmail.com",
                            FirstName = "Pola",
                            IsManager = false,
                            LastName = "Dinitz",
                            Password = "polad123",
                            UserName = "PolaDinitz"
                        },
                        new
                        {
                            Id = 4,
                            Email = "SagiKerner@gmail.com",
                            FirstName = "Sagi",
                            IsManager = false,
                            LastName = "Kerner",
                            Password = "Sagik123",
                            UserName = "SagiKerner"
                        },
                        new
                        {
                            Id = 5,
                            Email = "JonathanBarzilai@gmail.com",
                            FirstName = "Jonathan",
                            IsManager = false,
                            LastName = "Barzilai",
                            Password = "Jonathanb123",
                            UserName = "JonathanBarzilai"
                        });
                });

            modelBuilder.Entity("WebApp2021.Models.Recipe", b =>
                {
                    b.HasOne("WebApp2021.Models.User", "User")
                        .WithMany("Recipes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApp2021.Models.RecipeIngredient", b =>
                {
                    b.HasOne("WebApp2021.Models.Ingredient", "Ingredient")
                        .WithMany("Recipes")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApp2021.Models.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("WebApp2021.Models.RecipeUserEvent", b =>
                {
                    b.HasOne("WebApp2021.Models.Recipe", "Recipe")
                        .WithMany("Events")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApp2021.Models.User", "User")
                        .WithMany("Events")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApp2021.Models.StoreTag", b =>
                {
                    b.HasOne("WebApp2021.Models.Store", "Store")
                        .WithMany("Tags")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApp2021.Models.Tag", "Tag")
                        .WithMany("Stores")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Store");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("WebApp2021.Models.Ingredient", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("WebApp2021.Models.Recipe", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("WebApp2021.Models.Store", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("WebApp2021.Models.Tag", b =>
                {
                    b.Navigation("Stores");
                });

            modelBuilder.Entity("WebApp2021.Models.User", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
